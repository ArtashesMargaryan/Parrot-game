import { CellAlign, CellScale, IDimension, IRawBounds, IRawRect } from '../Types';
import { Point } from './geom/Point';
import { Rect } from './geom/Rect';
export declare function rawToRect({ x, y, width, height }: IRawBounds): Rect;
export declare function numberToRect(value: number): Rect;
export declare function fillRect({ x, y, width, height }: IRawRect): Rect;
export declare function px2number(value: string): number;
/**
 * @description Represents scale difference needed to scale first dimension compared with second based on scale type
 * @param d1 Dimension to scale
 * @param d2 Dimension to compare with
 * @param scaleType Scale type
 * @returns {Point}
 */
export declare function fit(d1: IDimension, d2: IDimension, scaleType: CellScale): Point;
/**
 * @description Represents position difference needed to align dimension in rect based on align type
 * @param dimension Dimension to align
 * @param rect Rect to align to
 * @param alignType Align type
 * @returns {Point}
 */
export declare function align(dimension: IDimension, rect: Rect, alignType: CellAlign): Point;
